# -*- coding: utf-8 -*-
"""Untitled25.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Lgtccepo9Zl0tuwDEQaMxZ28Mt4RTpej
"""

import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image
from tensorflow.keras.applications.resnet50 import preprocess_input

@st.cache_resource
def load_model():
    model = tf.keras.models.load_model("/content/best_skin_cancer_model.h5")
    return model

model = load_model()

class_labels = [
    'Melanocytic nevi (nv)',
    'Melanoma (mel)',
    'Benign keratosis-like lesions (bkl)',
    'Basal cell carcinoma (bcc)',
    'Actinic keratoses (akiec)',
    'Vascular lesions (vasc)',
    'Dermatofibroma (df)'
]

st.title("🔬 Skin Cancer Classification")
st.write("upload the photo and i will detict the diagnose")

# upload the photo
uploaded_file = st.file_uploader("chose the photo....", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    # عرض الصورة
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="", use_container_width=True)

    # تجهيز الصورة للموديل
    img = image.resize((224, 224))
    img_array = np.array(img)
    img_array = np.expand_dims(img_array, axis=0)  # شكل (1, 224, 224, 3)
    img_array = preprocess_input(img_array)  # نفس معالجة ResNet50

    # التنبؤ
    preds = model.predict(img_array)
    pred_class = np.argmax(preds, axis=1)[0]
    pred_label = class_labels[pred_class]
    confidence = np.max(preds) * 100

    # عرض النتيجة
    st.subheader("🔍 result:")
    st.write(f"**predicted:** {pred_label}")
    st.write(f"** confidence:** {confidence:.2f}%")